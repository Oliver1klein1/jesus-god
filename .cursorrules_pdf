# HTML to PDF Printing Rules for Book Publishing

## Overview
These rules ensure consistent, high-quality PDF generation from HTML source files with professional print formatting, proper styling preservation, and optimized layout for book publishing.

## PDF Printing Workflow

### 1. Always Use Enhanced Print CSS
When printing HTML files to PDF, ALWAYS include comprehensive print-specific CSS:
```css
@media print {
    /* Print-specific styles */
}
```

**Never rely on browser defaults** - always define explicit print styles.

### 2. Mandatory Print Optimization
Before PDF generation, ALWAYS apply these optimizations:
- Hide navigation elements
- Optimize page breaks
- Ensure proper margins and sizing
- Preserve all styling and formatting

### 3. Quality Verification
After PDF creation, ALWAYS verify:
- All styling preserved
- Navigation elements hidden
- Page breaks appropriate
- Fonts and colors render correctly

## Required Print CSS Standards

### Page Setup
```css
@media print {
    @page {
        size: 16in 9in; /* Landscape orientation */
        margin: 1in;
        /* Alternative sizes: 8.5in 11in (portrait), 11in 8.5in (landscape) */
    }
    
    body {
        font-family: Georgia, 'Times New Roman', Times, serif;
        font-size: 12pt;
        line-height: 1.6;
        color: #000;
        background: #fff;
    }
}
```

### Navigation Handling
```css
@media print {
    /* Hide all navigation elements */
    .navigation,
    .nav-link,
    nav,
    .navbar,
    .menu,
    .breadcrumb,
    .pagination {
        display: none !important;
    }
    
    /* Hide any navigation-related classes */
    [class*="nav"],
    [class*="menu"],
    [class*="breadcrumb"] {
        display: none !important;
    }
}
```

### Content Preservation
```css
@media print {
    /* Preserve all styling */
    .bible-quote,
    .highlight,
    .callout,
    .emphasis {
        /* Keep all original styles */
        display: block !important;
    }
    
    /* Ensure images print properly */
    img {
        max-width: 100% !important;
        height: auto !important;
        page-break-inside: avoid;
    }
    
    /* Preserve inline styles */
    [style] {
        /* Inline styles are preserved by default */
    }
}
```

### Page Break Control
```css
@media print {
    /* Prevent awkward page breaks */
    h1, h2, h3, h4, h5, h6 {
        page-break-after: avoid;
        page-break-inside: avoid;
    }
    
    p, li {
        page-break-inside: avoid;
        orphans: 3;
        widows: 3;
    }
    
    /* Force page breaks where needed */
    .page-break {
        page-break-before: always;
    }
    
    .no-break {
        page-break-inside: avoid;
    }
    
    /* Chapter breaks */
    .chapter {
        page-break-before: always;
    }
}
```

## HTML File Standards for PDF Printing

### Required Structure
- All HTML files must have proper `<head>` sections with print CSS
- Bible quotes must use `class="bible-quote"` for proper styling
- Images must have proper `src` attributes and alt text
- Navigation elements should use `class="navigation"` and `class="nav-link"`

### CSS Class Standards
- **Bible quotes**: Always use `class="bible-quote"`
- **Callouts/Highlights**: Use descriptive class names
- **Navigation**: Use `class="navigation"` and `class="nav-link"`
- **Page breaks**: Use `class="page-break"` for forced breaks
- **Styling**: Preserve all inline styles and CSS classes

### Print-Specific Classes
```html
<!-- Force page break -->
<div class="page-break"></div>

<!-- Prevent page break -->
<div class="no-break">
    <!-- Content that should stay together -->
</div>

<!-- Chapter start -->
<div class="chapter">
    <h1>Chapter Title</h1>
    <!-- Chapter content -->
</div>
```

## PDF Generation Methods

### Method 1: Browser Print to PDF
```bash
# Chrome/Edge command line
chrome --headless --disable-gpu --print-to-pdf="output.pdf" --print-to-pdf-no-header "file:///path/to/file.html"

# Firefox command line
firefox --print-to-pdf="output.pdf" "file:///path/to/file.html"
```

### Method 2: Puppeteer (Node.js)
```javascript
const puppeteer = require('puppeteer');

async function generatePDF(htmlFile, outputFile) {
    const browser = await puppeteer.launch();
    const page = await browser.newPage();
    
    await page.goto(`file://${htmlFile}`, {waitUntil: 'networkidle0'});
    
    await page.pdf({
        path: outputFile,
        format: 'A4', // or custom size
        printBackground: true,
        margin: {
            top: '1in',
            right: '1in',
            bottom: '1in',
            left: '1in'
        }
    });
    
    await browser.close();
}
```

### Method 3: wkhtmltopdf
```bash
wkhtmltopdf --page-size A4 --margin-top 1in --margin-right 1in --margin-bottom 1in --margin-left 1in --print-media-type input.html output.pdf
```

## Quality Assurance Checklist

### Before PDF Generation
- [ ] Print CSS includes all required styles
- [ ] Navigation elements properly hidden
- [ ] Page breaks appropriately placed
- [ ] Images properly referenced
- [ ] Fonts and colors defined for print

### After PDF Generation
- [ ] All styling preserved and visible
- [ ] Navigation elements completely hidden
- [ ] Page breaks occur at appropriate points
- [ ] Images display correctly
- [ ] Text is readable and properly formatted
- [ ] Bible quotes display with proper styling

### PDF Quality Check
- [ ] File size reasonable (not bloated)
- [ ] Text is selectable and searchable
- [ ] Images are crisp and clear
- [ ] Page margins consistent
- [ ] Fonts render correctly
- [ ] Colors print appropriately (or convert to grayscale)

## Print CSS Template

### Complete Print CSS Template
```css
/* Print-specific styles */
@media print {
    /* Page setup */
    @page {
        size: 16in 9in; /* Customize as needed */
        margin: 1in;
    }
    
    /* Base styles */
    body {
        font-family: Georgia, 'Times New Roman', Times, serif;
        font-size: 12pt;
        line-height: 1.6;
        color: #000;
        background: #fff;
        margin: 0;
        padding: 0;
    }
    
    /* Hide navigation */
    .navigation,
    .nav-link,
    nav,
    .navbar,
    .menu,
    .breadcrumb,
    .pagination,
    [class*="nav"],
    [class*="menu"],
    [class*="breadcrumb"] {
        display: none !important;
    }
    
    /* Preserve content styling */
    .bible-quote {
        font-family: 'Palatino Linotype', 'Book Antiqua', Palatino, serif;
        font-style: italic;
        color: #2c5282;
        background: #f0f4f8;
        border-left: 4px solid #4299e1;
        padding: 1.2rem 1.5rem;
        margin: 1.5rem 0;
        border-radius: 0 0.5rem 0.5rem 0;
        page-break-inside: avoid;
    }
    
    .highlight,
    .callout {
        page-break-inside: avoid;
        margin: 1rem 0;
    }
    
    /* Typography */
    h1, h2, h3, h4, h5, h6 {
        page-break-after: avoid;
        page-break-inside: avoid;
        color: #2d3748;
    }
    
    h1 {
        font-size: 18pt;
        margin-bottom: 1rem;
    }
    
    h2 {
        font-size: 16pt;
        margin-top: 1.5rem;
        margin-bottom: 0.5rem;
    }
    
    p, li {
        page-break-inside: avoid;
        orphans: 3;
        widows: 3;
        margin-bottom: 0.5rem;
    }
    
    /* Images */
    img {
        max-width: 100% !important;
        height: auto !important;
        page-break-inside: avoid;
        display: block;
        margin: 1rem auto;
    }
    
    /* Page breaks */
    .page-break {
        page-break-before: always;
    }
    
    .no-break {
        page-break-inside: avoid;
    }
    
    .chapter {
        page-break-before: always;
    }
    
    /* Tables */
    table {
        page-break-inside: avoid;
        border-collapse: collapse;
        width: 100%;
    }
    
    th, td {
        border: 1px solid #000;
        padding: 0.5rem;
        text-align: left;
    }
    
    /* Lists */
    ul, ol {
        page-break-inside: avoid;
    }
    
    /* Links */
    a {
        color: #000;
        text-decoration: none;
    }
    
    a[href]:after {
        content: " (" attr(href) ")";
        font-size: 10pt;
        color: #666;
    }
    
    /* Hide elements that shouldn't print */
    .no-print,
    .screen-only {
        display: none !important;
    }
}
```

## File Naming Conventions

### HTML Files
- `introduction.html`
- `chapter1.html`, `chapter2.html`, etc.
- `part1.html`, `part2.html`, etc.
- `conclusion.html`
- `appendix1.html`, `appendix2.html`, etc.

### PDF Files
- `[BookName]_Print.pdf` - Print-ready PDF
- `[BookName]_Draft.pdf` - Draft version
- `[BookName]_Final.pdf` - Final version

## Automation Commands

### Complete PDF Workflow
```bash
# 1. Ensure print CSS is included in HTML files
# 2. Generate PDF using preferred method
# 3. Verify PDF quality and content

# Example with Puppeteer
node generate_pdf.js input.html output.pdf

# Example with wkhtmltopdf
wkhtmltopdf --page-size A4 --margin-top 1in --print-media-type input.html output.pdf
```

### Quick Quality Check
```bash
# Verify PDF properties
pdfinfo output.pdf

# Check PDF content
pdftotext output.pdf -
```

## Best Practices

1. **Always test print preview** - Use browser print preview to check layout
2. **Preserve all styling** - PDF should look identical to HTML
3. **Optimize for readability** - Ensure text is clear and properly spaced
4. **Test multiple methods** - Different PDF generators may produce different results
5. **Keep file sizes reasonable** - Optimize images and fonts for print

## Troubleshooting

### Common Issues
- **Navigation visible**: Check print CSS hides navigation elements
- **Styling lost**: Ensure print CSS preserves all styles
- **Page breaks awkward**: Adjust page-break properties
- **Images not displaying**: Check image paths and print CSS
- **Fonts not rendering**: Ensure fonts are available for print

### Debug Steps
1. Use browser print preview to identify issues
2. Check print CSS is properly applied
3. Verify all required styles are included
4. Test with different PDF generation methods
5. Compare with screen version for discrepancies

## Success Criteria
- ✅ All styling preserved and visible in PDF
- ✅ Navigation elements completely hidden
- ✅ Page breaks occur at appropriate points
- ✅ Images display correctly and clearly
- ✅ Text is readable and properly formatted
- ✅ Bible quotes display with proper styling
- ✅ PDF file size is reasonable
- ✅ Text is selectable and searchable

Remember: **Quality over speed** - Always verify PDF output before finalizing.
